<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Jinsong Zhang</title>
    <link>https://zhangj5.github.io/post/</link>
      <atom:link href="https://zhangj5.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â© Jinsong Zhang {2022}</copyright><lastBuildDate>Wed, 01 Feb 2023 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://zhangj5.github.io/images/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_2.png</url>
      <title>Posts</title>
      <link>https://zhangj5.github.io/post/</link>
    </image>
    
    <item>
      <title>ChatGPT App in Shiny</title>
      <link>https://zhangj5.github.io/post/chatgpt-shinyapp/</link>
      <pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://zhangj5.github.io/post/chatgpt-shinyapp/</guid>
      <description>&lt;iframe src=&#34;https://zhangj5.shinyapps.io/ShinyChatGPT/&#34; width=&#34;100%&#34; height=&#34;800px&#34;&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Implementation of expectation-maximization algorithm in R</title>
      <link>https://zhangj5.github.io/post/2022-12-20-simulation_of_expectation_maximization/algorithm-bioinformatics/</link>
      <pubDate>Fri, 23 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://zhangj5.github.io/post/2022-12-20-simulation_of_expectation_maximization/algorithm-bioinformatics/</guid>
      <description>&lt;h1 id=&#34;an-implemenation-of-expectation-maximization-em-in-r&#34;&gt;An implemenation of expectation-maximization (EM) in R&lt;/h1&gt;
&lt;p&gt;Suppose that a mixed distribution consists of two underlying normal distributions. The hidden variables are the mean and variance of these two underlying distributions. In this tutorial, I will provide an example to show how we can use the EM algorithm to estimate the true values of these hidden parameters.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;dplyr&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:stats&#39;:
## 
##     filter, lag
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:base&#39;:
## 
##     intersect, setdiff, setequal, union
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;Let these be the true parameters of the two normal distributions:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;red_mean = 3
red_std = 0.8

blue_mean = 7
blue_std = 2

red = rnorm(200,red_mean, red_std)
blue = rnorm(200,blue_mean, blue_std)

both_colours = c(red, blue) %&amp;gt;% sort() 
plot(red,rep(0,length(red)),col=&amp;quot;red&amp;quot;,pch=16,ylab = &amp;quot;distribution 1&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://zhangj5.github.io/post/2022-12-20-simulation_of_expectation_maximization/EM_example_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot(blue,rep(0,length(red)),col=&amp;quot;blue&amp;quot;,pch=16,ylab = &amp;quot;distribution 2&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://zhangj5.github.io/post/2022-12-20-simulation_of_expectation_maximization/EM_example_files/figure-html/unnamed-chunk-2-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot(both_colours,rep(0,length(both_colours)),col=&amp;quot;purple&amp;quot;,pch=16,ylab = &amp;quot;mixed distribution&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://zhangj5.github.io/post/2022-12-20-simulation_of_expectation_maximization/EM_example_files/figure-html/unnamed-chunk-2-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;We need three functions to calculate the weighted probability, estimate the mean and the standard deviation.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# estimate the weight for each data point
weight_of_colour&amp;lt;-function(colour_likelihood, total_likelihood)
  {
    return(colour_likelihood/total_likelihood)
}

#estimate the mean
estimate_mean&amp;lt;-function(data, weight){
    return(sum(data*weight)/sum(weight))
}

#estimate the standard deviation
estimate_std&amp;lt;-function(data, weight, mean){
    variance = sum(weight*(data-mean)^2)/sum(weight)
    return(sqrt(variance))
}  

# make the intermediate plot for each iteration
plot_guesses&amp;lt;-function(red_mean_guess, blue_mean_guess, red_std_guess, blue_std_guess, alpha=1){
    points(x, dnorm(x,red_mean_guess, red_std_guess), col=alpha(alpha = alpha,colour = &#39;red&#39;))
    points(x, dnorm(x,blue_mean_guess, blue_std_guess), col=alpha(alpha = alpha,colour = &#39;blue&#39;))
    r_height = dnorm(red_mean_guess,red_mean_guess, red_std_guess)
    b_height = dnorm(blue_mean_guess,blue_mean_guess, blue_std_guess)
    segments(x0=red_mean_guess, x1=red_mean_guess, y=0, y1=r_height, col=alpha(alpha = alpha,colour = &#39;red&#39;))
    segments(x0=blue_mean_guess, x1=blue_mean_guess, y0=0, y1=b_height, col=alpha(alpha = alpha,colour = &#39;blue&#39;));

}
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;The first step is to initiate starting parameters:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;red_mean_guess = 1.5
blue_mean_guess = 8

ini_m=c(red_mean_guess,blue_mean_guess)

red_std_guess = 2
blue_std_guess = 1.7

ini_std=c(red_std_guess,blue_std_guess)
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;We then iterate between the steps of expectation and maximization using a loop function.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;N_ITER = 200

alphas = seq(0.1, 1, length.out=N_ITER) 
lo = floor(min(both_colours)) - 1
hi = ceiling(max(both_colours)) + 1
x = seq(lo, hi, length.out=500)
plot(both_colours, rep(0,length(both_colours)), pch=16, col=&#39;purple&#39;,ylim = c(0,0.6))



for(i in 0:N_ITER){
    
# Expectation step

    likelihood_of_red = dnorm(both_colours,red_mean_guess, red_std_guess)
    likelihood_of_blue = dnorm(both_colours,blue_mean_guess, blue_std_guess)

    red_weight = weight_of_colour(likelihood_of_red, likelihood_of_red+likelihood_of_blue)
    blue_weight = weight_of_colour(likelihood_of_blue, likelihood_of_red+likelihood_of_blue)
# maximization step
    
    red_std_guess = estimate_std(both_colours, red_weight, red_mean_guess)
    blue_std_guess = estimate_std(both_colours, blue_weight, blue_mean_guess)

    red_mean_guess = estimate_mean(both_colours, red_weight)
    blue_mean_guess = estimate_mean(both_colours, blue_weight)

    plot_guesses(red_mean_guess, blue_mean_guess, red_std_guess, blue_std_guess, alpha=alphas[i])

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://zhangj5.github.io/post/2022-12-20-simulation_of_expectation_maximization/EM_example_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;
5. After 200 loops, here is a comparison of the true and estimated parameters:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;        true_r_m=mean(red)
        true_b_m=mean(blue)
        
        est_r_m=red_mean_guess
        est_b_m=blue_mean_guess
        
        true_r_s=sqrt(var(red))
        true_b_s=sqrt(var(blue))
        
        est_r_s=red_std_guess
        est_b_s=blue_std_guess
        
        df&amp;lt;-data.frame(true_mean=c(true_r_m,true_b_m),inital_mean=ini_m, estimated_mean=c(est_r_m,est_b_m),true_std=c(true_r_s,true_b_s),initial_std=ini_std, estimated_std=c(est_r_s,est_b_s))
        print(df)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   true_mean inital_mean estimated_mean true_std initial_std estimated_std
## 1     2.915         1.5          2.944   0.7557         2.0         0.760
## 2     6.737         8.0          6.726   1.9773         1.7         2.013
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The results clearly showed a significant improvement over the initial parameters.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A movie showing how nuclear receptor changes its conformation in response to the ligand, referred to as &#34;Mouse Trap&#34;.</title>
      <link>https://zhangj5.github.io/post/2022-12-17-nuclear_receptor_conformational_change/</link>
      <pubDate>Tue, 20 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://zhangj5.github.io/post/2022-12-17-nuclear_receptor_conformational_change/</guid>
      <description>&lt;video width=&#34;1920&#34; height=&#34;1080&#34; autoplay loop muted controls&gt;
  &lt;source src=&#34;./nuclear_receptor_conformational_change_animation.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;
</description>
    </item>
    
    <item>
      <title>FusionQuant, an algorithm that simultaneously detects and quantifies leukemia fusion genes and isoforms from RNA-Seq data in AML</title>
      <link>https://zhangj5.github.io/post/simultaneous-detection-and-quantification-of-leukemia-fusion-genes-in-aml/</link>
      <pubDate>Sat, 03 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://zhangj5.github.io/post/simultaneous-detection-and-quantification-of-leukemia-fusion-genes-in-aml/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;INTRODUCTION&lt;/h1&gt;
&lt;p&gt;The earliest fusion gene discovered in the history of biomedical science is one between the BCR gene and the ABL gene. This gene encodes the fusion protein known as BCR-ABL, which plays an important role in the development of t(9;22) chronic myeloid leukemia (CML).
&lt;img src=&#34;https://nci-media.cancer.gov/pdq/media/images/533336.jpg&#34; alt=&#34;Chromosomal translocation between BCR and ABL gene&#34;&gt;&lt;/p&gt;
&lt;p&gt;Since then, many different leukemia fusion proteins have been discovered to function as the drivers of leukemias. One of these is AML1-ETO, arising from a recurring t(8;21) chromosomal translocation between chromosome 8 and chromosome 21. Its expression is responsible for up to 15% of all acute myeloid leukemia (AML) cases. While most AMLs tend to affect elderly patients, t(8;21) AML is common in the children and young adult patient population. AML1-ETO is the product of an in-frame fusion between the DNA-binding domain of the AML/RUNX1 gene and a nearly full-length ETO/MTG8/RUNX1T1 protein, missing a small N-terminus. At the DNA level, the fusion event occurs between intron 1 of ETO (Figure 1) and intron 3 of RUNX1 (Figure 2).&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;./9a_location.png&#34; alt=&#34;Expression of exon 9a in an t(8;21) AML detected by RNA-Seq and location of the t(8;21) translocation site&#34; width=&#34;748&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure 1: Expression of exon 9a in an t(8;21) AML detected by RNA-Seq and location of the t(8;21) translocation site&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;./runx1_location.png&#34; alt=&#34;The marked sequence and its upstream region are translocated into the ETO gene in t(8;21) AML&#34; width=&#34;748&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure 2: The marked sequence and its upstream region are translocated into the ETO gene in t(8;21) AML&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;12 exons have been annotated in the human reference genome for the ETO gene. Dr. Dong-Er Zhang found that an unannotated exon is transcribed to produce an alternative splice variant from the  AML1-ETO fusion gene. This exon was subsequently called exon 9a and the corresponding AML1-ETO variant was named AML1-ETO9a (&lt;a href=&#34;https://doi.org/10.1038/nm1443&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Yan, M., Kanbe, E., Peterson, L. et al. A previously unidentified alternatively spliced isoform of t(8;21) transcript promotes leukemogenesis. Nat Med 12, 945-949 (2006)&lt;/a&gt;). While full-length AML1-ETO has 752 amino acids, AML1-ETO9a has only 542 amino acids. This is because if exon 9a is retained after splicing, it would introduce a premature stop codon.&lt;/p&gt;
&lt;p&gt;AML1-ETO9a lacks a C-terminal sequence present in the full-length protein. This region interacts with proteins that play a role in transcriptional repression. It is still controversial whether AML1-ETO9a plays a role in disease progression in t(8;21) AML. To address this question, several groups have compared patients with high or low levels of AML1-ETO9a at diagnosis. Early studies showed that AML1-ETO9a expression was associated with poor prognosis. However, recent work by Agrawal M et al  challenged this view by showing that the level of AML1-ETO9a was not correlated with prognosis in an independent cohort of t(8;21) AML patients (&lt;a href=&#34;https://doi.org/10.1038%2Fs41375-019-0551-4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Functional and clinical characterization of the alternatively spliced isoform AML1-ETO9a in adult patients with translocation t(8;21)(q22;q22.1) acute myeloid leukemia (AML). Leukemia. 2020 Feb;34(2):630-634&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Although AML1-ETO expression at diagnosis may not be a prognostic factor, its levels may increase after treatment to promote disease progression. In this case, we would expect AML1-ETO9a expression to be increased in relapsed AML.&lt;/p&gt;
&lt;p&gt;The goal of this study is to develop an algorithm to detect the fusion genes using RNA-Seq data and quantify the expression of their isoforms. For the above reasons, we focused on the AML1-ETO isoforms.&lt;/p&gt;
&lt;h1 id=&#34;methods&#34;&gt;METHODS&lt;/h1&gt;
&lt;p&gt;We used the &lt;a href=&#34;https://pachterlab.github.io/kallisto/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kallisto&lt;/a&gt; software to quantify the fusion transcript levels. Kallisto quantifies the expression of a given transcript by aligning the reads to a transcriptomic index created from the sequences of all expressed transcripts in a genome. Because fusion gene transcripts are not included in the reference genome, in order to detect and quantify them,  we created a custom index wherein we replaced the canonical ETO/RUNX1T1 isoforms with the sequences of FL AML1-ETO and the truncated AML1-ETO9a isoform. The RNA-Seq data of patient samples were downloaded from the NCI &lt;a href=&#34;https://ocg.cancer.gov/programs/target&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TARGET&lt;/a&gt; AML database.&lt;/p&gt;
&lt;h1 id=&#34;results&#34;&gt;RESULTS&lt;/h1&gt;
&lt;h3 id=&#34;expression-of-aml1-eto9a-is-detected-in-all-amls-with-known-t821-status-and-some-amls-with-unknown-or-negative-t821-status&#34;&gt;Expression of AML1-ETO9a is detected in all AMLs with known t(8;21) status and some AMLs with unknown or negative t(8;21) status.&lt;/h3&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://zhangj5.github.io/post/simultaneous-detection-and-quantification-of-leukemia-fusion-genes-in-aml/index.en_files/figure-html/unnamed-chunk-4-1.png&#34; alt=&#34;Expression of AML1-ETO FL and AML1-ETO9a&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure 3: Expression of AML1-ETO FL and AML1-ETO9a&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;As shown in Figure 3, we detected AML1-ETO9a in all t(8;21) AMLs previously annotated using conventional cytogenetics approaches such as FISH. Interestingly, we also detected AML1-ETO9a expression in AMLs with âunknownâ or negative t(8;21) statuses. One possibility is that the conventional assays were not sensitive enough to detect the presence of the fusion event.&lt;/p&gt;
&lt;h3 id=&#34;detection-of-aml1-eto-fusion-transcripts-by-star-fusion-and-kallisto-fusion-tools&#34;&gt;Detection of AML1-ETO fusion transcripts by STAR-fusion and Kallisto-fusion tools.&lt;/h3&gt;
&lt;p&gt;Some bioinformatics algorithms have been developed to detect fusion genes from RNA-Seq data. We tested two such algorithms, known as STAR-fusion and Kallisto-fusion. Both algorithms found that the two AMLs with an âunknownâ t(8;21) status but expressing high levels of AML1-ETO9a indeed had fusion between AML1 and ETO (Figures 4,5). Consistent with our results, the Kallisto- fusion found that several AMLs with negative t(8;21) status but expressing detectable levels of AML1-ETO also contained AML1-ETO fusion transcripts (Figure 5).&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://zhangj5.github.io/post/simultaneous-detection-and-quantification-of-leukemia-fusion-genes-in-aml/index.en_files/figure-html/unnamed-chunk-6-1.png&#34; alt=&#34;Detection of AML1-ETO fusion by STAR-Fusion&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure 4: Detection of AML1-ETO fusion by STAR-Fusion&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://zhangj5.github.io/post/simultaneous-detection-and-quantification-of-leukemia-fusion-genes-in-aml/index.en_files/figure-html/unnamed-chunk-7-1.png&#34; alt=&#34;Detection of AML1-ETO fusion by Kallisto-Fusion&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure 5: Detection of AML1-ETO fusion by Kallisto-Fusion&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;aml1-eto9a-expression-at-the-time-of-diagnosis-was-not-correlated-with-disease-progression-figure-6&#34;&gt;AML1-ETO9a expression at the time of diagnosis was not correlated with disease progression (Figure 6).&lt;/h3&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://zhangj5.github.io/post/simultaneous-detection-and-quantification-of-leukemia-fusion-genes-in-aml/index.en_files/figure-html/unnamed-chunk-8-1.png&#34; alt=&#34;AML1-ETO9a levels at diagnosis cannot predict patient outcome&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure 6: AML1-ETO9a levels at diagnosis cannot predict patient outcome&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;aml1-eto9a-levels-are-significantly-elevated-in-t821-aml-in-relapse&#34;&gt;AML1-ETO9a levels are significantly elevated in t(8;21) AML in relapse.&lt;/h3&gt;
&lt;p&gt;Since we have now determined AML1-ETO9a levels at both diagnosis and relapse, we wanted to know whether its expression changed significantly at relapse compared with diagnosis. This required the use of paired AMLs, for which 5 cases were available in the TARGET t(8;21) AML cohort.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://zhangj5.github.io/post/simultaneous-detection-and-quantification-of-leukemia-fusion-genes-in-aml/index.en_files/figure-html/unnamed-chunk-9-1.png&#34; alt=&#34;AML1-ETO9a is significantly increased at relape in t(8;21) AML&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure 7: AML1-ETO9a is significantly increased at relape in t(8;21) AML&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The results showed that the expression of AML1-ETO9a significantly increased in t(8;21) AML at relapse (Figure 7). This suggests a role for AML1-ETO9a in promoting disease progression in t(8;21) AML.&lt;/p&gt;
&lt;h1 id=&#34;conclusion&#34;&gt;CONCLUSION&lt;/h1&gt;
&lt;h3 id=&#34;fusionquant-is-capable-of-simultaneously-detecting-and-quantifying-leukemia-fusion-gene-isoforms-in-t821-aml&#34;&gt;FusionQuant is capable of simultaneously detecting and quantifying leukemia fusion gene isoforms in t(8;21) AML.&lt;/h3&gt;
&lt;h3 id=&#34;aml1-eto9a-levels-at-the-time-of-diagnosis-do-not-correlate-with-survival&#34;&gt;AML1-ETO9a levels at the time of diagnosis do not correlate with survival.&lt;/h3&gt;
&lt;h3 id=&#34;aml1-eto9a-levels-are-significantly-increased-in-relapsed-amls-suggesting-a-role-for-aml1-eto9a-in-disease-progression-in-t821-aml&#34;&gt;AML1-ETO9a levels are significantly increased in relapsed AMLs, suggesting a role for AML1-ETO9a in disease progression in t(8;21) AML.&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>Recent COVID-19 Outbreak in China</title>
      <link>https://zhangj5.github.io/post/recent-covid19-outbreak-in-china/</link>
      <pubDate>Fri, 02 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://zhangj5.github.io/post/recent-covid19-outbreak-in-china/</guid>
      <description>&lt;iframe src=&#34;https://zhangj5.shinyapps.io/COVID19/&#34; width=&#34;100%&#34; height=&#34;800px&#34;&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Exploring the relationship between gene expression and leukemia prognosis in Shiny</title>
      <link>https://zhangj5.github.io/post/exploring-leukemia-prognosis-using-in-shiny/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://zhangj5.github.io/post/exploring-leukemia-prognosis-using-in-shiny/</guid>
      <description>&lt;p&gt;The acute myeloid leukemia (AML) is one of the most devastating forms of cancer. AML prognosis is determined by many factors. Here, we build a dynamic application in Shiny to explore the relationship between patient prognosis and gene expression.&lt;/p&gt;
&lt;iframe src=&#34;https://zhangj5.shinyapps.io/Acute_Myeloid_Leukemia_Prognosis/&#34; width=&#34;100%&#34; height=&#34;800px&#34;&gt;&lt;/iframe&gt;
</description>
    </item>
    
  </channel>
</rss>
